version: '3.8'

services:
  # MongoDB Cluster
  mongodb-primary:
    image: mongo:7.0
    container_name: mongodb-primary
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_primary_data:/data/db
      - mongodb_primary_config:/data/configdb
    command: mongod --replSet rs0 --bind_ip_all
    networks:
      - diaspomoney
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  mongodb-secondary-1:
    image: mongo:7.0
    container_name: mongodb-secondary-1
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27018:27017"
    volumes:
      - mongodb_secondary1_data:/data/db
      - mongodb_secondary1_config:/data/configdb
    command: mongod --replSet rs0 --bind_ip_all
    networks:
      - diaspomoney
    depends_on:
      - mongodb-primary

  mongodb-secondary-2:
    image: mongo:7.0
    container_name: mongodb-secondary-2
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27019:27017"
    volumes:
      - mongodb_secondary2_data:/data/db
      - mongodb_secondary2_config:/data/configdb
    command: mongod --replSet rs0 --bind_ip_all
    networks:
      - diaspomoney
    depends_on:
      - mongodb-primary

  # MongoDB Express (Admin UI)
  mongo-express:
    image: mongo-express:1.0.2
    container_name: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://admin:${MONGO_PASSWORD}@mongodb-primary:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    ports:
      - "8081:8081"
    networks:
      - diaspomoney
    depends_on:
      - mongodb-primary

  # Redis (Development)
  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - diaspomoney
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Commander (Admin UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD}
      HTTP_USER: admin
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD}
    ports:
      - "8082:8081"
    networks:
      - diaspomoney
    depends_on:
      - redis

  # Zookeeper (for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - diaspomoney

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - diaspomoney
    depends_on:
      - zookeeper

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: unless-stopped
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "8083:8080"
    networks:
      - diaspomoney
    depends_on:
      - kafka

volumes:
  mongodb_primary_data:
  mongodb_primary_config:
  mongodb_secondary1_data:
  mongodb_secondary1_config:
  mongodb_secondary2_data:
  mongodb_secondary2_config:
  redis_data:
  zookeeper_data:
  zookeeper_logs:
  kafka_data:

networks:
  diaspomoney:
    driver: bridge
