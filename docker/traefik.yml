entryPoints:
  # Entry point for HTTP traffic on port 80
  web:
    address: ":80"
    http:
      # Redirect all HTTP traffic to HTTPS
      redirections:
        entryPoint:
          to: websecure
          scheme: https
  # Entry point for HTTPS traffic on port 443
  websecure:
    address: ":443"

# Configuration for obtaining SSL certificates via Let's Encrypt
certificatesResolvers:
  myresolver:
    acme:
      # Email address for Let's Encrypt notifications and account management
      email: contact@diaspomoney.fr
      # Storage file for SSL certificates
      storage: /acme.json
      # Use HTTP challenge for domain verification
      httpChallenge:
        entryPoint: web

http:
  # Configure routers for handling requests
  routers:
    # Global HTTP to HTTPS redirection
    redirect-to-https:
      # Match all HTTP requests with any hostname
      rule: "HostRegexp(`{host:.+}`)"
      entryPoints:
        - web
      # Middleware to handle the redirection
      middlewares:
        - redirect-to-https
      # No actual service, just a placeholder for redirection
      service: noop@internal

    # Router to redirect www to non-www
    redirect-www:
      rule: "Host(`diaspomoney.fr`)"
      entryPoints:
        - web
        - websecure
      # Middleware to handle the redirection
      middlewares:
        - redirect-www
      # No actual service, just a placeholder for redirection
      service: noop@internal

  middlewares:
    # Middleware to redirect HTTP to HTTPS
    redirect-to-https:
      redirectScheme:
        scheme: https
        # Sends a permanent redirect (HTTP 301)
        permanent: true

    # Middleware to redirect 'www' subdomain to the root domain
    redirect-www:
      redirectRegex:
        # Matches URLs starting with 'www.'
        regex: "^https?://www\\.(.*)"
        # Replaces 'www.' with the root domain
        replacement: "https://$1"
        # Sends a permanent redirect (HTTP 301)
        permanent: true

# Enable Prometheus metrics for monitoring
metrics:
  prometheus:
    # Add labels for entry point and service
    addEntryPointsLabels: true
    addServicesLabels: true

log:
  # Set the logging level to DEBUG
  level: DEBUG
  format: json

api:
  # Enable the dashboard api
  dashboard: true
  insecure: false

# Use Docker as the provider for Traefik configurations
providers:
  docker:
    # Only explicitly exposed containers will be served by Traefik
    exposedByDefault: false
