// Script pour tester la d√©connexion
const API_BASE = "http://localhost:3000/api";

async function testSignOut() {
  console.log("üß™ Test de la d√©connexion...");

  try {
    // Test 1: V√©rifier l'√©tat de la session avant d√©connexion
    console.log("\nüì• Test GET /api/beneficiaries (avant d√©connexion)");
    const beforeResponse = await fetch(`${API_BASE}/beneficiaries`);
    console.log(`Status: ${beforeResponse.status}`);

    if (beforeResponse.ok) {
      const data = await beforeResponse.json();
      console.log(
        `‚úÖ Session active: ${data.beneficiaries?.length || 0} b√©n√©ficiaires trouv√©s`
      );
    } else {
      const error = await beforeResponse.json();
      console.log(`‚ùå Session inactive: ${error.error}`);
    }

    // Test 2: Simuler une d√©connexion (en supprimant les cookies)
    console.log("\nüîì Simulation de d√©connexion...");

    // Note: En r√©alit√©, la d√©connexion se fait c√¥t√© client avec NextAuth
    // Ce script ne peut que v√©rifier l'√©tat de l'API

    console.log("‚ÑπÔ∏è  Pour tester la d√©connexion:");
    console.log("   1. Ouvrez http://localhost:3000");
    console.log("   2. Connectez-vous");
    console.log("   3. Cliquez sur 'D√©connexion' dans la sidebar ou navbar");
    console.log("   4. V√©rifiez que vous √™tes redirig√© vers /login");
    console.log("   5. V√©rifiez que la session est bien supprim√©e");
  } catch (error) {
    console.error("‚ùå Erreur lors du test:", error.message);
  }
}

// Ex√©cuter les tests
testSignOut();
