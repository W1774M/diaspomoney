#!/bin/bash

# Script de d√©marrage pour l'environnement de production
# Usage: ./scripts/start-prod.sh

set -e

echo "üöÄ D√©marrage de l'environnement de production DiaspoMoney"
echo "============================================================="

# Obtenir le r√©pertoire du script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"
DOCKER_DIR="$PROJECT_DIR/docker"

echo "üìÅ R√©pertoire du projet : $PROJECT_DIR"
echo "üìÅ R√©pertoire Docker : $DOCKER_DIR"

# V√©rifier que Docker est install√©
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n'est pas install√©. Veuillez installer Docker d'abord."
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose n'est pas install√©. Veuillez installer Docker Compose d'abord."
    exit 1
fi

echo "‚úÖ Docker et Docker Compose sont install√©s"

# V√©rifier que le r√©pertoire docker existe
if [ ! -d "$DOCKER_DIR" ]; then
    echo "‚ùå R√©pertoire docker non trouv√© : $DOCKER_DIR"
    exit 1
fi

# Cr√©er le fichier .env s'il n'existe pas
if [ ! -f "$PROJECT_DIR/.env" ]; then
    echo "üìù Cr√©ation du fichier .env..."
    cat > "$PROJECT_DIR/.env" << EOF
# Configuration MongoDB pour la production
MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/diaspomoney?authSource=admin

# Configuration de l'application
NEXT_PUBLIC_APP_URL=https://app.diaspomoney.fr
NEXT_PUBLIC_API_URL=https://app.diaspomoney.fr/api

# Configuration NextAuth
NEXTAUTH_URL=https://app.diaspomoney.fr
NEXTAUTH_SECRET=your-super-secret-nextauth-key-here

# Configuration de l'environnement
NODE_ENV=production

# Cl√©s secr√®tes
JWT_SECRET=your-super-secret-jwt-key-here

# Configuration Let's Encrypt
LETSENCRYPT_EMAIL=your-email@example.com
EOF
    echo "‚úÖ Fichier .env cr√©√©"
    echo "‚ö†Ô∏è  N'oubliez pas de configurer vos variables dans .env"
else
    echo "‚úÖ Fichier .env existe d√©j√†"
fi

# Cr√©er le r√©seau Docker s'il n'existe pas
echo "üåê Cr√©ation du r√©seau Docker..."
docker network create diaspomoney 2>/dev/null || echo "‚úÖ R√©seau diaspomoney existe d√©j√†"

# Arr√™ter les services existants s'ils sont en cours
echo "üõë Arr√™t des services existants..."
cd "$DOCKER_DIR"
docker-compose -f docker-compose.yml -f docker-compose.prod.yml down 2>/dev/null || echo "Aucun service √† arr√™ter"

# D√©marrer les services de production
echo "üöÄ D√©marrage des services de production..."
cd "$DOCKER_DIR"
docker-compose -f docker-compose.yml -f docker-compose.prod.yml up --build -d

# Attendre que les services soient pr√™ts
echo "‚è≥ Attente que les services soient pr√™ts..."
sleep 15

# V√©rifier que les services sont d√©marr√©s
echo "üîç V√©rification des services..."
cd "$DOCKER_DIR"
if docker-compose -f docker-compose.yml -f docker-compose.prod.yml ps | grep -q "Up"; then
    echo "‚úÖ Tous les services sont d√©marr√©s"
else
    echo "‚ùå Erreur lors du d√©marrage des services"
    docker-compose -f docker-compose.yml -f docker-compose.prod.yml logs
    exit 1
fi

# V√©rifier la connexion MongoDB
echo "üîó Test de connexion MongoDB..."
if docker exec diaspomoney-mongodb mongosh -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD diaspomoney --eval "db.runCommand('ping')" > /dev/null 2>&1; then
    echo "‚úÖ Connexion MongoDB r√©ussie"
    echo "üîó Connexion MongoDB : mongodb://$MONGO_INITDB_ROOT_USERNAME:$MONGO_INITDB_ROOT_PASSWORD@mongodb:27017/diaspomoney"
else
    echo "‚ùå Erreur de connexion MongoDB"
    echo "üìã Logs MongoDB :"
    docker-compose -f docker-compose.yml -f docker-compose.prod.yml logs mongodb
    exit 1
fi


echo ""
echo "üéâ Environnement de production d√©marr√© avec succ√®s !"
echo ""
echo "üìã Services disponibles :"
echo "   ‚Ä¢ Application : https://app.diaspomoney.fr"
echo "   ‚Ä¢ Mongo Express : https://mongo.diaspomoney.fr"
echo "   ‚Ä¢ Dashboard Traefik : https://dashboard.diaspomoney.fr"
echo "   ‚Ä¢ Monitoring : https://dashboard.diaspomoney.fr/grafana/"
echo ""
echo "üìä Pour voir les logs :"
echo "   cd docker && docker-compose -f docker-compose.yml -f docker-compose.prod.yml logs app && cd .."
echo "   cd docker && docker-compose -f docker-compose.yml -f docker-compose.prod.yml logs traefik && cd .."
echo "   cd docker && docker-compose -f docker-compose.yml -f docker-compose.prod.yml logs mongodb && cd .."
echo "   cd docker && docker-compose -f docker-compose.yml -f docker-compose.prod.yml logs mongo-express && cd .."
echo ""
echo "üõë Pour arr√™ter :"
echo "cd docker && docker-compose -f docker-compose.yml -f docker-compose.prod.yml down && cd .. && ./scripts/start-prod.sh"
echo " Pour red√©marrer les services :"
echo "cd docker && docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d && cd .. && ./scripts/start-prod.sh"
