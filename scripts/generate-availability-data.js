// Script pour g√©n√©rer les donn√©es de disponibilit√© pour l'utilisateur 68f927134ad66acd9f40c445

console.log('=== G√©n√©ration des donn√©es de disponibilit√© ===');
console.log('ID utilisateur: 68f927134ad66acd9f40c445');
console.log('');

// D√©finir les disponibilit√©s pour chaque jour de la semaine
const availabilityData = {
  monday: [
    {
      start: '09:00',
      end: '12:00',
      isAvailable: true,
      maxBookings: 3,
      currentBookings: 0,
    },
    {
      start: '14:00',
      end: '18:00',
      isAvailable: true,
      maxBookings: 4,
      currentBookings: 0,
    },
  ],
  tuesday: [
    {
      start: '09:00',
      end: '12:00',
      isAvailable: true,
      maxBookings: 3,
      currentBookings: 0,
    },
    {
      start: '14:00',
      end: '18:00',
      isAvailable: true,
      maxBookings: 4,
      currentBookings: 0,
    },
  ],
  wednesday: [
    {
      start: '09:00',
      end: '12:00',
      isAvailable: true,
      maxBookings: 3,
      currentBookings: 0,
    },
    {
      start: '14:00',
      end: '18:00',
      isAvailable: true,
      maxBookings: 4,
      currentBookings: 0,
    },
  ],
  thursday: [
    {
      start: '09:00',
      end: '12:00',
      isAvailable: true,
      maxBookings: 3,
      currentBookings: 0,
    },
    {
      start: '14:00',
      end: '18:00',
      isAvailable: true,
      maxBookings: 4,
      currentBookings: 0,
    },
  ],
  friday: [
    {
      start: '09:00',
      end: '12:00',
      isAvailable: true,
      maxBookings: 3,
      currentBookings: 0,
    },
    {
      start: '14:00',
      end: '17:00',
      isAvailable: true,
      maxBookings: 3,
      currentBookings: 0,
    },
  ],
  saturday: [
    {
      start: '10:00',
      end: '14:00',
      isAvailable: true,
      maxBookings: 2,
      currentBookings: 0,
    },
  ],
  sunday: [], // Pas de disponibilit√© le dimanche
  timezone: 'Europe/Paris',
};

console.log('‚úÖ Donn√©es de disponibilit√© g√©n√©r√©es:');
console.log('üìÖ Horaires configur√©s:');
console.log('   - Lundi √† Vendredi: 9h-12h et 14h-18h (sauf Vendredi 14h-17h)');
console.log('   - Samedi: 10h-14h');
console.log('   - Dimanche: Pas de disponibilit√©');
console.log('   - Fuseau horaire: Europe/Paris');

console.log('\nüìã D√©tail des cr√©neaux:');
Object.keys(availabilityData).forEach(day => {
  if (day !== 'timezone' && availabilityData[day].length > 0) {
    console.log(`   ${day}: ${availabilityData[day].length} cr√©neau(x)`);
    availabilityData[day].forEach(slot => {
      console.log(
        `     - ${slot.start} √† ${slot.end} (max: ${slot.maxBookings})`
      );
    });
  }
});
console.log(`   Fuseau horaire: ${availabilityData.timezone}`);

console.log('\nüîß Commande MongoDB pour ajouter ces disponibilit√©s:');
console.log('db.users.updateOne(');
console.log('  { _id: ObjectId("68f927134ad66acd9f40c445") },');
console.log(
  `  { $set: { availability: ${JSON.stringify(availabilityData, null, 2)} } }`
);
console.log(');');

console.log('\nüìù Structure JSON compl√®te:');
console.log(JSON.stringify(availabilityData, null, 2));

console.log('\nüí° Instructions:');
console.log('1. Connectez-vous √† MongoDB avec authentification');
console.log('2. Utilisez la commande MongoDB ci-dessus');
console.log("3. Ou utilisez l'interface d'administration de l'application");
console.log(
  '4. Ou cr√©ez un endpoint API pour mettre √† jour les disponibilit√©s'
);
