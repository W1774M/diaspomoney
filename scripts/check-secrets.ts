#!/usr/bin/env node

// Script de v√©rification des cl√©s secr√®tes DiaspoMoney
// Usage: tsx scripts/check-secrets.ts

import crypto from "crypto";
import dotenv from "dotenv";
import { dirname, join } from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

dotenv.config({ path: join(__dirname, "..", ".env.local") });

console.log("üîê V√©rification des cl√©s secr√®tes DiaspoMoney");
console.log("============================================");
console.log("");

// V√©rifier les variables d'environnement
const requiredSecrets: string[] = [
  "JWT_SECRET",
  "NEXTAUTH_SECRET",
  "NEXTAUTH_URL",
  "MONGODB_URI",
];

const missingSecrets: string[] = [];
const configuredSecrets: string[] = [];

requiredSecrets.forEach((secret: string) => {
  if (process.env[secret]) {
    configuredSecrets.push(secret);
    console.log(`‚úÖ ${secret}: Configur√©`);
  } else {
    missingSecrets.push(secret);
    console.log(`‚ùå ${secret}: Manquant`);
  }
});

console.log("");

if (missingSecrets.length > 0) {
  console.log("‚ö†Ô∏è  Variables manquantes d√©tect√©es !");
  console.log("");
  console.log("üìù Ajoutez ces variables dans votre fichier .env.local :");
  console.log("");

  if (!process.env.JWT_SECRET) {
    console.log(`JWT_SECRET=${crypto.randomBytes(64).toString("hex")}`);
  }

  if (!process.env.NEXTAUTH_SECRET) {
    console.log(`NEXTAUTH_SECRET=${crypto.randomBytes(32).toString("base64")}`);
  }

  if (!process.env.NEXTAUTH_URL) {
    console.log("NEXTAUTH_URL=http://localhost:3000");
  }

  if (!process.env.MONGODB_URI) {
    console.log(
      "MONGODB_URI=mongodb://diaspomoney_user:diaspomoney_app_password@localhost:27017/diaspomoney"
    );
  }

  console.log("");
  process.exit(1);
}

// V√©rifier la s√©curit√© des cl√©s
console.log("üîç V√©rification de la s√©curit√© des cl√©s...");
console.log("");

const jwtSecret: string = process.env.JWT_SECRET!;
const nextAuthSecret: string = process.env.NEXTAUTH_SECRET!;

const warnings: string[] = [];

// V√©rifier la longueur des cl√©s
if (jwtSecret.length < 32) {
  warnings.push("JWT_SECRET est trop court (minimum 32 caract√®res)");
}

if (nextAuthSecret.length < 32) {
  warnings.push("NEXTAUTH_SECRET est trop court (minimum 32 caract√®res)");
}

// V√©rifier la complexit√© des cl√©s
if (!/[a-f0-9]{64,}/.test(jwtSecret)) {
  warnings.push(
    "JWT_SECRET devrait √™tre une cha√Æne hexad√©cimale de 64+ caract√®res"
  );
}

if (!/[A-Za-z0-9+/]{32,}={0,2}/.test(nextAuthSecret)) {
  warnings.push(
    "NEXTAUTH_SECRET devrait √™tre une cha√Æne base64 de 32+ caract√®res"
  );
}

if (warnings.length > 0) {
  console.log("‚ö†Ô∏è  Probl√®mes de s√©curit√© d√©tect√©s :");
  warnings.forEach((warning: string) => console.log(`   ‚Ä¢ ${warning}`));
  console.log("");
  console.log("üîÑ Pour g√©n√©rer de nouvelles cl√©s s√©curis√©es :");
  console.log(
    "   node -e \"console.log(require('crypto').randomBytes(64).toString('hex'))\""
  );
  console.log(
    "   node -e \"console.log(require('crypto').randomBytes(32).toString('base64'))\""
  );
  console.log("");
} else {
  console.log("‚úÖ Toutes les cl√©s secr√®tes sont s√©curis√©es");
}

// V√©rifier la configuration MongoDB
console.log("");
console.log("üóÑÔ∏è  V√©rification de la configuration MongoDB...");

const mongoUri: string | undefined = process.env.MONGODB_URI;
if (mongoUri && mongoUri.includes("localhost:27017")) {
  console.log("‚úÖ Configuration MongoDB locale d√©tect√©e");
  console.log(
    "üí° Assurez-vous que Docker est d√©marr√© avec : docker-compose up -d"
  );
} else if (mongoUri) {
  console.log("‚úÖ Configuration MongoDB externe d√©tect√©e");
} else {
  console.log("‚ùå Configuration MongoDB manquante");
}

console.log("");
console.log("üéâ V√©rification termin√©e !");
console.log("");
console.log("üìã Prochaines √©tapes :");
console.log("   1. D√©marrer Docker : docker-compose up -d");
console.log("   2. D√©marrer l'application : npm run dev");
console.log("   3. Acc√©der √† l'application : http://localhost:3000");
console.log("   4. Acc√©der √† Mongo Express : http://localhost:8081");
