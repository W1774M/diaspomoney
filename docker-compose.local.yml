version: "3.8"

services:
  # Base de données MongoDB
  mongodb:
    image: mongo:7.0
    container_name: diaspomoney-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: diaspomoney
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - diaspomoney-network

  # Cache Redis
  redis:
    image: redis:7.2-alpine
    container_name: diaspomoney-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - diaspomoney-network

  # Application Next.js (développement)
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.dev
  #   container_name: diaspomoney-app
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     # Base de données
  #     MONGODB_URI: mongodb://admin:password123@mongodb:27017/diaspomoney?authSource=admin
  #     MONGODB_DATABASE: diaspomoney

  #     # Redis
  #     REDIS_URL: redis://:redis123@redis:6379

  #     # JWT
  #     JWT_SECRET: your-super-secret-jwt-key-for-development
  #     JWT_REFRESH_SECRET: your-super-secret-refresh-key-for-development

  #     # Email (Resend)
  #     RESEND_API_KEY: ${RESEND_API_KEY:-}

  #     # Stripe
  #     STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-}
  #     STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY:-}
  #     STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET:-}

  #     # CDN
  #     CDN_BASE_URL: http://localhost:3000

  #     # Environment
  #     NODE_ENV: development
  #     NEXTAUTH_URL: http://localhost:3000
  #     NEXTAUTH_SECRET: your-nextauth-secret-for-development

  #     # Encryption
  #     ENCRYPTION_MASTER_KEY: your-32-character-encryption-key-here

  #     # Monitoring (optionnel pour le dev)
  #     SENTRY_DSN: ${SENTRY_DSN:-}

  #   volumes:
  #     - .:/app
  #     - /app/node_modules
  #     - /app/.next
  #   depends_on:
  #     - mongodb
  #     - redis
  #   networks:
  #     - diaspomoney-network
  #   command: npm run dev

  # Monitoring avec Prometheus (optionnel)
  prometheus:
    image: prom/prometheus:latest
    container_name: diaspomoney-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - diaspomoney-network
    profiles:
      - monitoring

  # Visualisation des métriques avec Grafana (optionnel)
  grafana:
    image: grafana/grafana:latest
    container_name: diaspomoney-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - diaspomoney-network
    profiles:
      - monitoring

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  grafana_data:
    driver: local

networks:
  diaspomoney-network:
    driver: bridge
