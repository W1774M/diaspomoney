/**
 * API Route - Get Verification Link
 * Endpoint pour obtenir le lien de v√©rification (pour les tests)
 */

import dbConnect from '@/lib/mongodb';
import User from '@/models/User';
import jwt from 'jsonwebtoken';
import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { email } = body;

    if (!email) {
      return NextResponse.json(
        { error: 'Adresse email requise' },
        { status: 400 }
      );
    }

    // S'assurer que la connexion √† la base de donn√©es est √©tablie
    await dbConnect();

    // Trouver l'utilisateur
    const user = await (User as any).findOne({ email: email.toLowerCase() });
    if (!user) {
      return NextResponse.json(
        { error: 'Aucun compte trouv√© avec cette adresse email' },
        { status: 404 }
      );
    }

    // G√©n√©rer un nouveau token de v√©rification
    const emailVerificationToken = jwt.sign(
      { userId: user._id?.toString() || user.id, type: 'email_verification' },
      process.env['JWT_SECRET']!,
      { expiresIn: '24h' }
    );

    // Cr√©er le lien de v√©rification
    const verificationUrl = `${process.env['NEXTAUTH_URL'] || 'http://localhost:3000'}/verify-email?token=${emailVerificationToken}`;

    console.log('üîó Lien de v√©rification g√©n√©r√© pour:', email);
    console.log('üîó URL:', verificationUrl);

    return NextResponse.json(
      {
        success: true,
        message: 'Lien de v√©rification g√©n√©r√©',
        email: email,
        verificationUrl: verificationUrl,
        note: "En d√©veloppement, l'email est envoy√© √† malarbillaudrey@gmail.com. Utilisez ce lien pour tester la v√©rification.",
      },
      { status: 200 }
    );
  } catch (error) {
    console.error('Erreur get-verification-link API:', error);

    return NextResponse.json(
      {
        error:
          error instanceof Error
            ? error.message
            : 'Erreur lors de la g√©n√©ration du lien',
        success: false,
      },
      { status: 400 }
    );
  }
}
