networks:
  diaspomoney:
    driver: bridge
  traefik:
    external: false

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  traefik_letsencrypt:
    driver: local
  traefik_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

services:
  # === REVERSE PROXY ===
  traefik:
    image: traefik:v3.1
    container_name: traefik
    restart: unless-stopped
    networks:
      - traefik
      - diaspomoney
    ports:
      - "80:80"
      - "443:443"
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.metrics.address=:9100
      - --certificatesresolvers.le.acme.email=contact@diaspomoney.fr
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.le.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.network=diaspomoney
      - --providers.docker.exposedByDefault=false
      - --api.dashboard=true
      - --api.insecure=false
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addServicesLabels=true
      - --metrics.prometheus.entryPoint=metrics
      - --log.level=INFO
      - --log.format=json
      - --log.filePath=/var/log/traefik/traefik.log
      - --accessLog.filePath=/var/log/traefik/access.log
      - --global.checkNewVersion=false
      - --global.sendAnonymousUsage=false
    volumes:
      - traefik_letsencrypt:/letsencrypt
      - traefik_logs:/var/log/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik-dashboard.rule=Host(`dashboard.diaspomoney.fr`)
      - traefik.http.routers.traefik-dashboard.entrypoints=websecure
      - traefik.http.routers.traefik-dashboard.tls=true
      - traefik.http.routers.traefik-dashboard.tls.certresolver=le
      - traefik.http.routers.traefik-dashboard.service=api@internal

  # === APPLICATION ===
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: diaspomoney-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:${MONGO_PASSWORD}@mongodb:27017/diaspomoney?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - NEXTAUTH_URL=https://app.diaspomoney.fr
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - ENCRYPTION_MASTER_KEY=${ENCRYPTION_MASTER_KEY}
      - SENTRY_DSN=${SENTRY_DSN}
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - traefik
      - diaspomoney
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "1G"
    labels:
      - traefik.enable=true
      - traefik.docker.network=diaspomoney
      - traefik.http.routers.app.rule=Host(`app.diaspomoney.fr`)
      - traefik.http.routers.app.entrypoints=websecure
      - traefik.http.routers.app.tls=true
      - traefik.http.routers.app.tls.certresolver=le
      - traefik.http.services.app.loadbalancer.server.port=3000
      - traefik.http.routers.app-http.rule=Host(`app.diaspomoney.fr`)
      - traefik.http.routers.app-http.entrypoints=web
      - traefik.http.routers.app-http.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true

  # === DATABASE ===
  mongodb:
    image: mongo:7.0
    container_name: diaspomoney-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: diaspomoney
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - diaspomoney
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mongosh --host 127.0.0.1 --username admin --password ${MONGO_PASSWORD} --authenticationDatabase admin --quiet --eval 'db.adminCommand({ ping: 1 }).ok ? 0 : 1'",
        ]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 40s

  # === CACHE ===
  redis:
    image: redis:7.2-alpine
    container_name: diaspomoney-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - diaspomoney
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # === MONITORING ===
  prometheus:
    image: prom/prometheus:latest
    container_name: diaspomoney-prometheus
    restart: unless-stopped
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - diaspomoney
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.rule=Host(`dashboard.diaspomoney.fr`) && PathPrefix(`/prometheus`)
      - traefik.http.routers.prometheus.entrypoints=websecure
      - traefik.http.routers.prometheus.tls=true
      - traefik.http.routers.prometheus.tls.certresolver=le
      - traefik.http.services.prometheus.loadbalancer.server.port=9090

  grafana:
    image: grafana/grafana:latest
    container_name: diaspomoney-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_SERVER_DOMAIN: dashboard.diaspomoney.fr
      GF_SERVER_ROOT_URL: https://dashboard.diaspomoney.fr/grafana
      GF_SERVER_SERVE_FROM_SUB_PATH: true
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - diaspomoney
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`dashboard.diaspomoney.fr`) && PathPrefix(`/grafana`)
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.tls.certresolver=le
      - traefik.http.services.grafana.loadbalancer.server.port=3000

  # === ADMIN TOOLS ===
  mongo-express:
    image: mongo-express:latest
    container_name: diaspomoney-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - diaspomoney
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.mongo-express.rule=Host(`mongo.diaspomoney.fr`)
      - traefik.http.routers.mongo-express.entrypoints=websecure
      - traefik.http.routers.mongo-express.tls=true
      - traefik.http.routers.mongo-express.tls.certresolver=le
      - traefik.http.services.mongo-express.loadbalancer.server.port=8081
