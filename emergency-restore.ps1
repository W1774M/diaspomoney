# Script d'urgence pour restaurer la base de donn√©es
Write-Host "üö® RESTAURATION D'URGENCE - DiaspoMoney" -ForegroundColor Red

# V√©rifier MongoDB
Write-Host "üîó V√©rification de MongoDB..." -ForegroundColor Yellow
try {
    $result = docker exec mongodb mongosh --username admin --password admin123 --authenticationDatabase admin --eval "db.adminCommand('ping')" 2>$null
    if ($LASTEXITCODE -ne 0) {
        throw "MongoDB non accessible"
    }
    Write-Host "‚úÖ MongoDB est accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå MongoDB n'est pas accessible" -ForegroundColor Red
    exit 1
}

# Cr√©er la base de donn√©es
Write-Host "üóÑÔ∏è  Cr√©ation de la base de donn√©es diaspomoney..." -ForegroundColor Yellow
docker exec mongodb mongosh --username admin --password admin123 --authenticationDatabase admin --eval "use diaspomoney; db.createCollection('users')" --quiet

# Ins√©rer des donn√©es de base
Write-Host "üìä Insertion des donn√©es de base..." -ForegroundColor Yellow

# Utilisateurs de base
$users = @(
    @{
        _id = "user1"
        email = "admin@diaspomoney.fr"
        name = "Administrateur"
        role = "admin"
        createdAt = (Get-Date).ToString("yyyy-MM-ddTHH:mm:ss.fffZ")
    },
    @{
        _id = "user2"
        email = "test@diaspomoney.fr"
        name = "Utilisateur Test"
        role = "user"
        createdAt = (Get-Date).ToString("yyyy-MM-ddTHH:mm:ss.fffZ")
    }
)

foreach ($user in $users) {
    $json = $user | ConvertTo-Json -Compress
    docker exec mongodb mongosh --username admin --password admin123 --authenticationDatabase admin --eval "use diaspomoney; db.users.insertOne($json)" --quiet
}

# Sp√©cialit√©s de base
$specialities = @(
    @{ _id = "spec1"; name = "M√©decine G√©n√©rale"; description = "Soins m√©dicaux g√©n√©raux" },
    @{ _id = "spec2"; name = "Cardiologie"; description = "Sp√©cialit√© cardiaque" },
    @{ _id = "spec3"; name = "Dermatologie"; description = "Sp√©cialit√© de la peau" }
)

foreach ($spec in $specialities) {
    $json = $spec | ConvertTo-Json -Compress
    docker exec mongodb mongosh --username admin --password admin123 --authenticationDatabase admin --eval "use diaspomoney; db.specialities.insertOne($json)" --quiet
}

# Partenaires de base
$partners = @(
    @{ _id = "partner1"; name = "H√¥pital Central"; address = "123 Rue de la Sant√©"; city = "Paris" },
    @{ _id = "partner2"; name = "Clinique Priv√©e"; address = "456 Avenue des Soins"; city = "Lyon" }
)

foreach ($partner in $partners) {
    $json = $partner | ConvertTo-Json -Compress
    docker exec mongodb mongosh --username admin --password admin123 --authenticationDatabase admin --eval "use diaspomoney; db.partners.insertOne($json)" --quiet
}

Write-Host "‚úÖ Base de donn√©es restaur√©e avec des donn√©es de base" -ForegroundColor Green
Write-Host "üìä V√©rification des collections..." -ForegroundColor Yellow

# V√©rifier les collections
$collections = docker exec mongodb mongosh --username admin --password admin123 --authenticationDatabase admin --eval "use diaspomoney; db.getCollectionNames()" --quiet
Write-Host "Collections disponibles: $collections" -ForegroundColor Cyan

Write-Host "üéâ Restauration d'urgence termin√©e !" -ForegroundColor Green
Write-Host "‚ö†Ô∏è  Vous devrez peut-√™tre recr√©er vos donn√©es sp√©cifiques" -ForegroundColor Yellow
