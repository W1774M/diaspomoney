networks:
  diaspomoney:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

services:
  # === DATABASE ===
  mongodb:
    image: mongo:7.0
    container_name: diaspomoney-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: diaspomoney
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - diaspomoney
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mongosh --host 127.0.0.1 --username admin --password password123 --authenticationDatabase admin --quiet --eval 'db.adminCommand({ ping: 1 }).ok ? 0 : 1'",
        ]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 40s

  # === CACHE ===
  redis:
    image: redis:7.2-alpine
    container_name: diaspomoney-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - diaspomoney
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # === ADMIN TOOLS ===
  mongo-express:
    image: mongo-express:latest
    container_name: diaspomoney-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - diaspomoney

  # === MONITORING (optionnel) ===
  prometheus:
    image: prom/prometheus:latest
    container_name: diaspomoney-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - diaspomoney
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: diaspomoney-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - diaspomoney
    profiles:
      - monitoring
